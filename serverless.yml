service: backend
frameworkVersion: '3'

custom:
  usersTableName: 'users'
  visitorsTableName: 'visitors'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:CreateTable
          Resource: '*'

  environment:
    USERS_TABLE: ${self:custom.usersTableName}
    VISITORS_TABLE: ${self:custom.visitorsTableName}

functions:
  api:
    handler: app.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userID
            AttributeType: S
        KeySchema:
          - AttributeName: userID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.usersTableName}
    VisitorsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: visitorID
            AttributeType: S
        KeySchema:
          - AttributeName: visitorID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.visitorsTableName}
